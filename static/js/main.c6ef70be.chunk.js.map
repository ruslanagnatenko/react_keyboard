{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","key","setState","document","addEventListener","this","removeEventListener","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,MAFhB,EAaEC,YAAc,SAACC,GACb,IAAMF,EAAaE,EAAMC,IAEzB,EAAKC,SAAS,CAAEJ,gBAhBpB,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,8BACGA,EACC,oEAEQA,EAFR,QAKA,8DA9BV,GAAyBS,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c6ef70be.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: null | KeyboardEvent\n};\n\nexport class App extends React.PureComponent {\n  state: State = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    const pressedKey = event.key;\n\n    this.setState({ pressedKey });\n  };\n\n  render(): React.ReactNode {\n    const { pressedKey } = this.state;\n\n    return (\n      <div>\n        {pressedKey ? (\n          <p>\n            The last pressed key is\n            {` [${pressedKey}]`}\n          </p>\n        ) : (\n          <p>Nothing was pressed yet</p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}